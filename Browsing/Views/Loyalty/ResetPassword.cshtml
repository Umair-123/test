@using InternetTicketing.Infrastructure.Bundles
@using InternetTicketing.Infrastructure.Html
@using InternetTicketing.Infrastructure.Localisation
@using InternetTicketing.Infrastructure.Routing
@model InternetTicketing.Browsing.ViewModels.Loyalty.ResetPasswordViewModel 
@{
    var message = String.Empty;
    if (Model.MinPasswordLength.HasValue)
    {
        message = LoyaltyValidation.PasswordMinimumLength;
    }
    if (Model.MaxPasswordLength.HasValue)
    {
        message = LoyaltyValidation.PasswordMaximumLength;
    }
    if (Model.MinPasswordLength.HasValue && Model.MaxPasswordLength.HasValue)
    {
        message = LoyaltyValidation.PasswordLengthRange;
    }
    IDictionary<string, object> passwordLimits = Html.GetLengthValidationAttributes(Model.MinPasswordLength, Model.MaxPasswordLength, message);    
}           
@section Css {
    @ContentDelivery.Css("Forms.css")
    @ContentDelivery.Css("Validation.css")
    @ContentDelivery.Css("Loyalty/AuthenticationForm.css")
    @ContentDelivery.Css("Loyalty/ForgotDetails.css")    
    
}

@section Scripts {
    @ContentDelivery.ScriptBundle(JsBundles.Validation)
    @ContentDelivery.Script("Vista/Loyalty/ResetPassword.js")
}

<div id="reset-password" class="loyalty-authentication-form-page">
    <h2>
        @LoyaltyForgotDetails.ResetPasswordTitle
        @if (!String.IsNullOrWhiteSpace(LoyaltyForgotDetails.ResetPasswordSubtitle))
        {
            <em>@LoyaltyForgotDetails.ResetPasswordSubtitle</em>
        }
    </h2>
    
    @if (!String.IsNullOrWhiteSpace(Model.InvalidResetCodeMessage))
    {
        <p class="form-error">
            @Model.InvalidResetCodeMessage
        </p>
        <div class="button-container">
            <a  href="@BrowsingUrls.GetLoyaltyForgotPasswordPageUrl()" class="page-action submit">
                <span>@LoyaltyForgotDetails.ResetPasswordResendButton</span>
            </a>
        </div>          
    }
    else
    {
        using (Html.BeginForm("ResetPassword", "Loyalty", new { code = Model.ResetCode }, FormMethod.Post, new { @class = "reset-password-form loyalty-authentication-form" }))
        {
            <form action="@Model.FormActionUrl" method="POST">
                <div class="form-line">
                    @Html.LabelFor(m => m.NewPassword, null,null,"*")@*
              *@@Html.PasswordFor(m => m.NewPassword, passwordLimits)@*
              *@@Html.ValidationMessageFor(m => m.NewPassword, string.Empty, new {@class = "icon icon-small"})
                </div>
                <div class="form-line">
                    @Html.LabelFor(m => m.NewPasswordConfirm,null,null,"*")@*
              *@@Html.PasswordFor(m => m.NewPasswordConfirm, passwordLimits)@*
              *@@Html.ValidationMessageFor(m => m.NewPasswordConfirm, string.Empty, new {@class = "icon icon-small"})
                </div>    
                @Html.HiddenFor(m => m.MembershipId)
                <div class="button-container">
                    <button type="submit" class="page-action submit">
                        <span>@LoyaltyForgotDetails.ResetPasswordSubmitButton</span>
                    </button>
                </div>
            </form>
        }
    }
</div>
